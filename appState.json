{"EDITOR_STATE":{"allProjectFiles":{"33934c41-a5f8-4f8f-9d03-8d207726a4e8":{"id":"33934c41-a5f8-4f8f-9d03-8d207726a4e8","parent":null,"name":"real-time-stream-processor-mock","type":"DIRECTORY","isDirectory":true,"children":["16e8ed21-8b13-496c-8a07-ff6b94c7e9e7"],"isRemovable":false,"filePath":"real-time-stream-processor-mock"},"16e8ed21-8b13-496c-8a07-ff6b94c7e9e7":{"id":"16e8ed21-8b13-496c-8a07-ff6b94c7e9e7","parent":"33934c41-a5f8-4f8f-9d03-8d207726a4e8","name":"process-and-persist-record.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"real-time-stream-processor-mock/process-and-persist-record.js","code":"/*\n * SLAppForge Sigma. Integrated Development Environment for Serverless Computing\n *\n * Copyright (c) 2018 SLAppForge Lanka Private Limited. All Rights Reserved.\n * https://www.slappforge.com\n *\n * You may use this file in accordance with the License Agreement provided with the Software or, alternatively, \n * in accordance with the terms contained in a written agreement between you and SLAppForge.\n *\n * If you have questions regarding the use of this file, please contact SLAppForge at info@slappforge.com\n */\n\nconst AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function (event, context, callback) {\n\n\tevent.Records.forEach(record => {\n\n\t\tlet payload = JSON.parse(new Buffer(record.kinesis.data, 'base64').toString('ascii'));\n\n\t\t// Partition key and sort key should be non null values\n\t\tif (payload.ip !== null && payload.datetime !== null) {\n\n\t\t\tddb.put({\n\t\t\t\tTableName: 'click-stream-table',\n\t\t\t\tItem: {\n\t\t\t\t\t'IP': payload.ip,\n\t\t\t\t\t'Timestamp': payload.timestamp,\n\t\t\t\t\t'Browser': payload.browser,\n\t\t\t\t\t'URL': payload.url,\n\t\t\t\t\t'Referrer': payload.referrer,\n\t\t\t\t\t'OS': payload.os,\n\t\t\t\t\t'Country': payload.country,\n\t\t\t\t\t'Language': payload.language\n\t\t\t\t}\n\t\t\t}, function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err, 'Error in persisting record');\n\t\t\t\t} else {\n\t\t\t\t\tcallback(null, data);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tcallback(null, 'Missing required keys ip or datetime');\n\t\t}\n\n\t});\n\n}","resources":["kinesisclickStream","ddbclickStreamTable","ddbclickStreamTable","ddbclickStreamTable","ddbclickStreamTable","ddbclickStreamTable"],"triggers":[{"resourceName":"kinesisclickStream","config":{"StartingPosition":"TRIM_HORIZON","BatchSize":100}}],"version":122}},"rootNode":"33934c41-a5f8-4f8f-9d03-8d207726a4e8","openFiles":["16e8ed21-8b13-496c-8a07-ff6b94c7e9e7"],"currentFileId":"16e8ed21-8b13-496c-8a07-ff6b94c7e9e7","resources":{"kinesisclickStream":{"name":"kinesisclickStream","type":"Kinesis","config":{"mode":0,"StreamName":"click-stream","shards":1,"region":"us-east-1","triggerParams":{"StartingPosition":"TRIM_HORIZON","BatchSize":100}},"globallyEditable":true,"usage":{"16e8ed21-8b13-496c-8a07-ff6b94c7e9e7":{"operations":{},"occurrence":1,"triggers":[{"StartingPosition":"TRIM_HORIZON","BatchSize":100}]}}},"ddbclickStreamTable":{"name":"ddbclickStreamTable","type":"DynamoDB","config":{"mode":0,"operation":"put","table":{"arn":"","name":"click-stream-table","partitionKey":"IP","partitionKeyType":"S","hasSortKey":false,"sortKey":"","sortKeyType":"S","mode":0},"isGlobalEditMode":false,"parameters":{"TableName":"click-stream-table","Item":{"IP":"@{payload.ip}","Timestamp":"@{payload.timestamp}","Browser":"@{payload.browser}","URL":"@{payload.url}","Referrer":"@{payload.referrer}","OS":"@{payload.os}","Country":"@{payload.country}","Language":"@{payload.language}"}},"validator":{"validatableFields":{},"validity":true},"valid":true},"globallyEditable":false,"usage":{"16e8ed21-8b13-496c-8a07-ff6b94c7e9e7":{"operations":{"put":[{"TableName":"click-stream-table","Item":{"IP":"@{payload.ip}","Timestamp":"@{payload.timestamp}","Browser":"@{payload.browser}","URL":"@{payload.url}","Referrer":"@{payload.referrer}","OS":"@{payload.os}","Country":"@{payload.country}","Language":"@{payload.language}"}}]},"occurrence":1,"triggers":[]}}}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"}}},"lambdaId":"16e8ed21-8b13-496c-8a07-ff6b94c7e9e7","changeExistingProject":false,"additionalFiles":[]},"PROJECT_META":{"projectName":"real-time-stream-processor-mock","projectDescription":"A sample use case of the usage of AWS Kinesis with AWS Lambda (Real-time Stream Processing: Application Activity Tracking)","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"real-time-stream-processor-mock","repoUrl":"https://github.com/sigmaidetest/real-time-stream-processor-mock","lastSave":1517690535897}}